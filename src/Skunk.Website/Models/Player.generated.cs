//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Skunk.Website.Models
{
	/// <summary>Player</summary>
	[PublishedContentModel("Player")]
	public partial class Player : Base
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Player";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Player(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Player, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Association number: The number of the player issued by the volleyball federation.
		///</summary>
		[ImplementPropertyType("associationNumber")]
		public string AssociationNumber
		{
			get { return this.GetPropertyValue<string>("associationNumber"); }
		}

		///<summary>
		/// Length: The length of the player.
		///</summary>
		[ImplementPropertyType("length")]
		public string Length
		{
			get { return this.GetPropertyValue<string>("length"); }
		}

		///<summary>
		/// Photo: The photo to the player.
		///</summary>
		[ImplementPropertyType("photo")]
		public IPublishedContent Photo
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo"); }
		}

		///<summary>
		/// Player Type: The type of player in the field.
		///</summary>
		[ImplementPropertyType("playerType")]
		public string PlayerType
		{
			get { return this.GetPropertyValue<string>("playerType"); }
		}

		///<summary>
		/// Shirt number: The number of the player that's displayed on his/her shirt.
		///</summary>
		[ImplementPropertyType("shirtNumber")]
		public string ShirtNumber
		{
			get { return this.GetPropertyValue<string>("shirtNumber"); }
		}
	}
}
