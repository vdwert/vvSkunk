//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Skunk.Website.Models
{
	/// <summary>Team</summary>
	[PublishedContentModel("Team")]
	public partial class Team : Base
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Team";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Team(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Team, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Competition Feed: The RSS feed of the currect competition of the team.
		///</summary>
		[ImplementPropertyType("competitionFeed")]
		public string CompetitionFeed
		{
			get { return this.GetPropertyValue<string>("competitionFeed"); }
		}

		///<summary>
		/// Page description: The description meta-tag, used for search engine indexing.
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return this.GetPropertyValue<string>("pageDescription"); }
		}

		///<summary>
		/// Page title: The title of the page displayed in the browser.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Photo: A photo of the entire team, not required.
		///</summary>
		[ImplementPropertyType("photo")]
		public IPublishedContent Photo
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo"); }
		}

		///<summary>
		/// Position Feed: The RSS feed of the currect position of the team.
		///</summary>
		[ImplementPropertyType("positionFeed")]
		public string PositionFeed
		{
			get { return this.GetPropertyValue<string>("positionFeed"); }
		}

		///<summary>
		/// Team Type: The type of team.
		///</summary>
		[ImplementPropertyType("teamType")]
		public string TeamType
		{
			get { return this.GetPropertyValue<string>("teamType"); }
		}

		///<summary>
		/// Training Times: Training times of the team.
		///</summary>
		[ImplementPropertyType("trainingTimes")]
		public IHtmlString TrainingTimes
		{
			get { return this.GetPropertyValue<IHtmlString>("trainingTimes"); }
		}
	}
}
